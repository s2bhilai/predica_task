// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trip_Management_Entities;

namespace Trip_Management_Api.Migrations
{
    [DbContext(typeof(TripContext))]
    [Migration("20210926202341_InitialDBSetUp")]
    partial class InitialDBSetUp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Trip_Management_Entities.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.CustomerType", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerType");

                    b.HasData(
                        new
                        {
                            CustomerTypeId = 1,
                            CustomerTypeName = "Adults"
                        },
                        new
                        {
                            CustomerTypeId = 2,
                            CustomerTypeName = "Children"
                        },
                        new
                        {
                            CustomerTypeId = 3,
                            CustomerTypeName = "Infant"
                        });
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsCancelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modified_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("TripExpense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Trip_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trip_Itinerary_Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Trip_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trip_Start_Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("TripCustomerId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "TripId");

                    b.HasIndex("TripId");

                    b.ToTable("TripCustomer");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripDetail", b =>
                {
                    b.Property<int>("TripDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modified_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("TripModeId")
                        .HasColumnType("int");

                    b.Property<int>("TripPropertyId")
                        .HasColumnType("int");

                    b.Property<int>("TripSpotId")
                        .HasColumnType("int");

                    b.Property<int>("TripTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Trip_Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trip_Preference_Sequence")
                        .HasColumnType("int");

                    b.HasKey("TripDetailsId");

                    b.HasIndex("TripId")
                        .IsUnique();

                    b.HasIndex("TripModeId");

                    b.HasIndex("TripPropertyId");

                    b.HasIndex("TripSpotId");

                    b.HasIndex("TripTypeId");

                    b.ToTable("TripDetail");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripMode", b =>
                {
                    b.Property<int>("TripModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TripModeType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripModeId");

                    b.ToTable("TripMode");

                    b.HasData(
                        new
                        {
                            TripModeId = 1,
                            TripModeType = "Flights"
                        },
                        new
                        {
                            TripModeId = 2,
                            TripModeType = "Trains"
                        },
                        new
                        {
                            TripModeId = 3,
                            TripModeType = "Cruises"
                        },
                        new
                        {
                            TripModeId = 4,
                            TripModeType = "Rental Cars"
                        },
                        new
                        {
                            TripModeId = 5,
                            TripModeType = "Road Trips"
                        });
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripProperty", b =>
                {
                    b.Property<int>("TripPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TripPropertyType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripPropertyId");

                    b.ToTable("TripProperty");

                    b.HasData(
                        new
                        {
                            TripPropertyId = 1,
                            TripPropertyType = "Hotels"
                        },
                        new
                        {
                            TripPropertyId = 2,
                            TripPropertyType = "House"
                        },
                        new
                        {
                            TripPropertyId = 3,
                            TripPropertyType = "Apartment"
                        },
                        new
                        {
                            TripPropertyId = 4,
                            TripPropertyType = "Hostel"
                        },
                        new
                        {
                            TripPropertyId = 5,
                            TripPropertyType = "Resort"
                        },
                        new
                        {
                            TripPropertyId = 6,
                            TripPropertyType = "Villa"
                        });
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripSpot", b =>
                {
                    b.Property<int>("TripSpotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripSpotId");

                    b.ToTable("TripSpot");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripType", b =>
                {
                    b.Property<int>("TripTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TripTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripTypeId");

                    b.ToTable("TripType");

                    b.HasData(
                        new
                        {
                            TripTypeId = 1,
                            TripTypeDescription = "Family_Trip"
                        },
                        new
                        {
                            TripTypeId = 2,
                            TripTypeDescription = "Trip_with_friends"
                        },
                        new
                        {
                            TripTypeId = 3,
                            TripTypeDescription = "Solo_Trip"
                        },
                        new
                        {
                            TripTypeId = 4,
                            TripTypeDescription = "Honeymoon_Trip"
                        },
                        new
                        {
                            TripTypeId = 5,
                            TripTypeDescription = "Adventure"
                        },
                        new
                        {
                            TripTypeId = 6,
                            TripTypeDescription = "Religious"
                        });
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.Customer", b =>
                {
                    b.HasOne("Trip_Management_Entities.Models.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripCustomer", b =>
                {
                    b.HasOne("Trip_Management_Entities.Models.Customer", "Customer")
                        .WithMany("TripCustomers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trip_Management_Entities.Models.Trip", "Trip")
                        .WithMany("TripCustomers")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.TripDetail", b =>
                {
                    b.HasOne("Trip_Management_Entities.Models.Trip", "Trip")
                        .WithOne("TripDetail")
                        .HasForeignKey("Trip_Management_Entities.Models.TripDetail", "TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trip_Management_Entities.Models.TripMode", "TripMode")
                        .WithMany()
                        .HasForeignKey("TripModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trip_Management_Entities.Models.TripProperty", "TripProperty")
                        .WithMany()
                        .HasForeignKey("TripPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trip_Management_Entities.Models.TripSpot", "TripSpot")
                        .WithMany()
                        .HasForeignKey("TripSpotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trip_Management_Entities.Models.TripType", "TripType")
                        .WithMany()
                        .HasForeignKey("TripTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("TripMode");

                    b.Navigation("TripProperty");

                    b.Navigation("TripSpot");

                    b.Navigation("TripType");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.Customer", b =>
                {
                    b.Navigation("TripCustomers");
                });

            modelBuilder.Entity("Trip_Management_Entities.Models.Trip", b =>
                {
                    b.Navigation("TripCustomers");

                    b.Navigation("TripDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
